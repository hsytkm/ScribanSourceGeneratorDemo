<#@ template debug="false" hostspecific="false" language="C#" linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY T4Demo2.tt. DO NOT CHANGE IT.
// </auto-generated>
#nullable enable
using System.Threading.Tasks;
<#
static string GetTList(int i) {
    return string.Join(", ", Enumerable.Range(1, i).Select(x => $"T{x}"));
}

static string GetFuncArgs(int i) {
    return string.Join(", ", Enumerable.Range(1, i).Select(x => $"Task<T{x}> task{x}"));
}

static string GetWhenAllArgs(int i) {
    return string.Join(", ", Enumerable.Range(1, i).Select(x => $"task{x}"));
}

static string GetResultTuple(int i) {
    return string.Join(", ", Enumerable.Range(1, i).Select(x => $"task{x}.Result"));
}
#>
public static class T4Demo2
{
<# for (int i = 2; i <= 4; i++) {#>
    public static async Task<(<#= GetTList(i) #>)> WhenAll<<#= GetTList(i) #>>(<#= GetFuncArgs(i) #>)
    {
        await Task.WhenAll(<#= GetWhenAllArgs(i) #>);
        return (<#= GetResultTuple(i) #>);
    }

<# } #>
}
